load_pattern:
  - linear:
      to: 100%
      over: 5s
config:
  client:
    headers:
      test: 123
loggers:
  l:
    select: >-
      (response.body.b == "foo"
        && response.body.e == response.body.e2
        && request.headers.test == "123")
      &&
      (
        (response.body.a == 0
          && response.body.c == 123
          && response.body.f == "line1")
        ||
        (response.body.a == 1
          && response.body.c == 456
          && response.body.f == "line2")
      )
    limit: 2
    to: stdout
  l2:
    limit: 1
    to: stdout
providers:
  a:
    range: {}
  b:
    static: "foo"
  c:
    static_list:
      - 123
      - 456
  d:
    response: {}
  e2:
    static: ["foo", "foo", "foo"]
  f:
    file:
      path: integration.data
      repeat: true
endpoints:
  - method: POST
    declare:
      e: collect(b, 3)
    url: http://localhost:${$PORT}/
    body: '{"a": ${a}, "b": "${b}", "c": ${c}, "e": ${e}, "e2": ${e2}, "f": "${f}"}'
    peak_load: 1hps
    headers:
      Content-Type: application/json
  - method: POST
    declare:
      e: collect(b, 3)
    url: http://localhost:${$PORT}/multipart
    body:
      multipart:
        test: 
          headers:
            sha1: A4D8B154FB003E06DF42F7EEDFE95AE5F926F1BC
          body:
            file: test.jpg
    peak_load: 1hps
    logs:
      l2:
        select: if(response.status == 204, true, response.body)